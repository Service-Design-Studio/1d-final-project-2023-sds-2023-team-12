<%# Do not modify this from line 2 to 13 - Louis %>
<%# <div class="alert alert-danger alert-dismissible fade show animate__animated animate__fadeInDown" role="alert"> %>


<% if flash[:help] == 1%> 
  <% flash[:for_view_api].each_pair do |key,value| %>

  <div class="alert alert-warning alert-dismissible fade show animate__animated animate__fadeInDown notification" role="alert">
  <%=  value  %>
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>

  <% end %>
<% end %>


<div class="container_detail row animate__animated  animate__fadeInUp">
<h1 class="report_header_breadcrumb">Case Details</h1>

<div class="row">

    <div class="column column_left post_image_new">
      <div class="case_post_image">
        <%= image_tag @post.image_url if @post.image%>
        <br>

        <div>
          <p class="poster-detail"> Posted By</p>
          <p class="poster-detail poster-detail-data"> <%=@user.full_name %> </p>

          <p class="poster-detail"> Contact</p>
          <p class="poster-detail poster-detail-data"> <%= @user.mobile_phone%> </p>

          <p class="poster-detail"> Last Updated</p>
          <p class="poster-detail poster-detail-data"> ??toeditsenna</p>
        </div>
      </div>
    </div>

    <%# Gcloud test %>
    <%# <%= image_tag(@post.avatar, width: 200) if @post.avatar.attached? %> 
<div class="column column_right">
      <p class="form_headers post_item"> Basic Information </p>

      <div class="post_item">
        <div style="display: block" class="report-label mb-1">Full name</div>
        <div class="report-content"><%= @post.full_name%></div>
      </div>

      <div class="post_item">
        <div style="display: block" class="report-label mb-1">Age</div>
        <div class="report-content"><%= @post.age%></div>
      </div>

      <div class="post_item">
        <div style="display: block" class="report-label mb-1">Gender</div>
        <div class="report-content"><%= @post.gender%></div>
      </div>

      <p class="form_headers post_item"> Last Seen </p>

      <div class="post_item">
        <div style="display: block" class="report-label mb-1">Location</div>
        <div class="report-content"><%= @post.location%></div>
      </div>

      <div class="post_item">
        <div style="display: block" class="report-label mb-1">Missing Time</div>
        <div class="report-content"><%= @post.missing_time.to_fs(:rfc822) %></div>
      </div>

      <div class="post_item">
        <div style="display: block" class="report-label mb-1">Description</div>
        <div class="report-content"><%= @post.store_description%></div>
      </div>

      <p class="form_headers post_item"> Extra Information </p>

      <div class="post_item">
        <div style="display: block" class="report-label mb-1">Special Note</div>
        <div class="report-content"><%= @post.store_special_note%></div>
      </div>

      <div class="post_item">
        <div style="display: block" class="report-label mb-1">Reward</div>
        <div class="report-content"><i class="fa-solid fa-coins reward_coins"></i><%= @post.reward%></div>
      </div>

<% if current_user and current_user.id == @user_id %>

    <div class="button_for_two_bottom">
    <button>
    <%= link_to "EDIT", edit_user_post_path(current_user,@post)%>
    </button>
    <button>
    <%= link_to "DELETE", user_post_path(current_user,@post),data: {turbo_method: :delete}%>
    </button>
    </div>
<%end%>

</h3>
</div>
</div>
</div>

<%# FOR PUBLIC CONTRIBUTION %>
<div class="container-comments row animate__animated  animate__fadeInUp">
  <h1 class="title_bottom">Public Contribution</h1>

    <div id="comments">
      <% @comments.each do |comment| %>
        <%= render comment %>
      <% end %>
    </div>

    <div class="mt-3 animate__animated  animate__fadeInUp">
      <%= render "comments/form", comment: @comment %>
    </div>
</div>

<%# # FOR AI FEATURE %>
<div class="container-faq row animate__animated  animate__fadeInUp">
  <h1 class="title_bottom">Commonly Asked Questions</h1>

  <div class="common_asked_answer_content">

    <div class="for_each_question">
      <button class="button-answer-ai" id="first_openai_request">What should I do if i suspect someone is <%= @post.full_name%>?</button>
      <div class="answer_from_open_ai animate__animated animate__fadeInRight" id="first_answer_from_open_ai">
          <h4 class="loading"> Please wait while our AI tool generates an answer for you!</h4>
      </div>
    </div>

    <div class="for_each_question">
      <button class="button-answer-ai" id="second_openai_request">Given <%= @post.full_name%>'s condition, what is the most appropriate way to approach <%= @post.full_name%>?</button>
      <div class="answer_from_open_ai animate__animated animate__fadeInRight" id="second_answer_from_open_ai">
      <h4 class="loading">Please wait while our AI tool generates an answer for you!</h4>
      </div>
    </div>

    <div class="for_each_question">
      <button class="button-answer-ai" id="third_openai_request">Based on description provided during reporting process, our app generated photo to help with recognization and facilitate searching process?</button>

      <div class="answer_from_open_ai animate__animated animate__fadeInRight" id="third_answer_from_open_ai">
          <h4 class="loading" id="should_be_hidden">Please wait while our AI tool generates an image for you!</h4>
          <img id="image_from_open_ai">
      </div>

    </div>
  </div>

</div>







<%# /// Test  %>

<%# // JavaScript Code %>
<script>

function formatTextWithNumbers(text) {
   const sentences = text.split(/[.!?](?=\s*\d+\.)/); // Split the text by sentences that start with a number
  let result = "";

  sentences.forEach((sentence, index) => {
    if (sentence.trim() !== "") {
      result += `${index + 1}. ${sentence.trim()}:\n`;
    }
  });

  return result;
}

function fetchData(box_id,question_number) {
  fetch(`/post/<%=@post.id%>/question_${question_number}`) // Replace with the appropriate route for your server endpoint
    .then((response) => {
      if (!response.ok) {
        throw new Error("Network response was not ok.");
      }
      return response.json();
    })
    .then((data) => {
      displayData(box_id,data,question_number);
    })
    .catch((error) => {
      console.error("Error fetching data:", error);
    });
}


function displayData(box_id,data,question_number) {
    const resultDiv = document.getElementById(box_id);
    if(question_number==3){
      const responseData = data.data;
      const resultP=document.getElementById("should_be_hidden"); 
      resultP.style.display="none";
      resultDiv.src=responseData;
    }
    else{
      const responseData =(data.data); 
      resultDiv.innerHTML = responseData;
    }
}

// ## Function to handle button 1
let handleQuestion=(id_box,id_button)=>{
    answer_box=document.getElementById(id_box);
    button=document.getElementById(id_button);
    if(answer_box.style.display=='block'){
       answer_box.style.display='none';
       button.classList.remove('active_button');
    }
    else{
      answer_box.style.display='block';
      button.classList.add('active_button');
    }
}

let after_dom_load=()=>{
    var button_one=document.getElementById("first_openai_request");
    var button_two=document.getElementById("second_openai_request");
    var button_three=document.getElementById("third_openai_request");

    var box_one=document.getElementById("first_answer_from_open_ai");
    var box_two=document.getElementById("second_answer_from_open_ai");
    var box_three=document.getElementById("third_answer_from_open_ai");

    box_one.style.display="none";
    box_two.style.display="none";
    box_three.style.display="none";


    fetchData("first_answer_from_open_ai",1);
    fetchData("second_answer_from_open_ai",2);
    fetchData("image_from_open_ai",3);


    button_one.addEventListener('click',
    function(){
        handleQuestion("first_answer_from_open_ai","first_openai_request")
    });

    button_two.addEventListener('click',
    function(){
        handleQuestion("second_answer_from_open_ai","second_openai_request")
    });

    button_three.addEventListener('click',
    function(){
        handleQuestion("third_answer_from_open_ai","third_openai_request")
    });
}

document.addEventListener("DOMContentLoaded", after_dom_load);

// $(document).on('turbolinks:load', function() {
//   after_dom_load();
// });

// after_dom_load();

//     function hello(name) {
//     let greeting = "Hello, " + name + "!";
//     console.log(greeting);
//     alert(greeting);
// }

// document.getElementById("fetchDataButton").addEventListener("click", fetchData);

//     function fetchData() {
//       fetch('/post/<%=@post.id%>/question_1') // Replace with the appropriate route for your server endpoint
//         .then(response => {
//           if (!response.ok) {
//             throw new Error('Network response was not ok.');
//           }
//           return response.json();
//         })
//         .then(data => {
//           displayData(data);
//         })
//         .catch(error => {
//           console.error('Error fetching data:', error);
//         });
//     }

//     function displayData(data) {
//       const resultDiv = document.getElementById("result");
//        const responseData = data.data; 
//        resultDiv.innerHTML = responseData
//     }

// document.addEventListener('DOMContentLoaded', () => {
//     const clickButton = document.getElementById("greet-user-button");
//     clickButton.addEventListener('click', (event) => {
//         hello('JavaScript')
//     });
// });

</script>
